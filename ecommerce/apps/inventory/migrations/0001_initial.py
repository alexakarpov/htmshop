# Generated by Django 4.2.2 on 2023-07-26 01:14

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('catalogue', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='ProductSpecification',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=55, verbose_name='Name')),
            ],
            options={
                'verbose_name': 'specification',
                'verbose_name_plural': 'Associated Specifications',
            },
        ),
        migrations.CreateModel(
            name='ProductSpecificationValue',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=30)),
            ],
            options={
                'verbose_name': 'Product spec',
                'verbose_name_plural': 'Product specs',
            },
        ),
        migrations.CreateModel(
            name='ProductType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Required', max_length=55, unique=True, verbose_name='Product Type name')),
            ],
            options={
                'verbose_name_plural': 'Product Types',
            },
        ),
        migrations.CreateModel(
            name='ProductStock',
            fields=[
                ('sku', models.CharField(help_text='Required', max_length=12, primary_key=True, serialize=False, unique=True, validators=[django.core.validators.RegexValidator(code='nomatch', message='Not a valid SKU', regex='^A-(?!0)\\d{1,3}(\\.\\d{1,2}x\\d{1,2})?(?(1)[MP]|P?)\\Z|^[BHJR]-(?!0)\\d{1,3}\\Z|^[DG]-(?!0)\\d{1,3}P?\\Z|^L-(?!0)\\d{1,3}[ABC]\\Z|^M-(?!0)\\d{1,3}[AEJ]?\\Z|^S-[1-9]\\Z')], verbose_name='Product SKU')),
                ('restock_point', models.PositiveIntegerField(default=1)),
                ('target_amount', models.PositiveIntegerField(default=1)),
                ('wrapping_qty', models.IntegerField(default=0, verbose_name='Wrapping room stock')),
                ('sanding_qty', models.IntegerField(default=0, verbose_name='Sanding room stock')),
                ('painting_qty', models.IntegerField(default=0, verbose_name='Painting room stock')),
                ('weight', models.DecimalField(decimal_places=2, help_text='ounces', max_digits=10)),
                ('price', models.DecimalField(decimal_places=2, max_digits=10)),
                ('product', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='catalogue.product')),
                ('product_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.producttype')),
                ('specifications', models.ManyToManyField(through='inventory.ProductSpecificationValue', to='inventory.productspecification')),
            ],
            options={
                'verbose_name': 'Product Stock Record',
                'verbose_name_plural': 'Inventory Stock Records',
            },
        ),
        migrations.AddField(
            model_name='productspecificationvalue',
            name='sku',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.productstock'),
        ),
        migrations.AddField(
            model_name='productspecificationvalue',
            name='specification',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.productspecification'),
        ),
        migrations.AddField(
            model_name='productspecification',
            name='product_type',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='inventory.producttype'),
        ),
    ]
