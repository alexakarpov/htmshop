---
- name: installations
  hosts: htmstore_dev
  become: true

  tasks:
    - name: updatem, if last run was more than 1000 hours ago
      apt:
        update_cache: yes
        cache_valid_time: 3600000

    - name: and a few packages
      apt:
        name:
          [
            tree,
            git,
            curl,
            python3-dev,
            python3-pip,
            libpq-dev,
            python3-virtualenv,
            python-is-python3,
            emacs-nox,
            nginx,
          ]
        state: latest

    - name: create the group for the store admin
      group:
        name: htm
        state: present

    - name: me with sudo
      user:
        name: akarpov
        groups: sudo, docker, htm
        shell: /bin/bash
        password: $1$SomeSalt$fG/7WJxdGZynylTBJbXPc1

    - name: admin user without sudo
      user:
        name: storeadmin
        groups: docker, htm
        shell: /bin/bash
        password: $6$foobarsalt$quoyGsj/DPOV943ZXZjF9UALAjRwwiyP6a02Jqu0B5upUO/OU9UD2TB.Icte/Ch5luhbcx3S9RQmsbcxQRNzu.

    - name: Place my public keys
      authorized_key:
        user: akarpov
        key: '{{ item }}'
      with_file:
        - ../public_keys/akamac.pub
        - ../public_keys/akarpov.pub
        - ../public_keys/ak_guest.pub

    - name: Place admin public key
      authorized_key:
        user: storeadmin
        key: '{{ item }}'
      with_file:
        - ../public_keys/storeadmin.pub

    - name: Create app directory
      file:
        path: /var/htmshop
        state: directory
        owner: storeadmin
        group: htm
        mode: 0775

    - name: Create static_root subdirectory
      file:
        path: /var/htmshop/static_root
        state: directory
        owner: storeadmin
        group: htm
        mode: 0775

    - name: Create media_root directory
      file:
        path: /var/htmshop/media_root
        state: directory
        owner: storeadmin
        group: htm
        mode: 0775

    - name: Create log subdirectory
      file:
        path: /var/htmshop/log
        state: directory
        owner: storeadmin
        group: htm
        mode: 0775

    # - name: requirement file
    #   copy:
    #     src: ../requirements.txt
    #     dest: /var/htmshop/requirements.txt
    #     owner: storeadmin
    #     group: htm
    #     mode: 644

    #### secrets
    - name: db init.sql file
      copy:
        src: ../secrets/init.sql
        dest: /var/htmshop/init.sql
        owner: storeadmin
        group: htm

    #### virtualenv
    - name: create the virtualenv
      command:
        cmd: virtualenv /var/htmshop/venv -p python3.8
        creates: '/var/htmshop/venv'

    - name: venv ownership
      file:
        path: /var/htmshop/venv
        state: directory
        owner: storeadmin
        group: htm
        mode: 0775

    # installation of dependencies moved to deploy book

    #### GUNICORN
    - name: Gunicorn socket file
      copy:
        src: ../gunicorn/gunicorn.socket
        dest: /etc/systemd/system/gunicorn.socket

    - name: Gunicorn service file
      copy:
        src: ../gunicorn/gunicorn.service
        dest: /etc/systemd/system/gunicorn.service

    - name: Gunicron systemd socket start
      systemd:
        name: gunicorn.socket
        state: started

    - name: Gunicorn systemd service start
      systemd:
        name: gunicorn.service
        enabled: yes
        daemon_reload: yes
        state: started

    ### nginx stuff
    - name: Copy nginx configuration
      copy:
        src: ../nginx/nginx.conf
        dest: /etc/nginx/sites-available/transylvania.bostonmonks.com

    - name: Create symlink for nginx config
      file:
        src: /etc/nginx/sites-available/transylvania.bostonmonks.com
        dest: /etc/nginx/sites-enabled/transylvania.bostonmonks.com
        state: link

    - name: Remove default site
      file:
        path: /etc/nginx/sites-enabled/default
        state: absent

    - name: Enable service nginx
      service:
        name: nginx
        enabled: yes

    - name: restart nginx
      service:
        name: nginx
        state: restarted

    - name: restart gunicorn
      service:
        name: gunicorn
        state: restarted
